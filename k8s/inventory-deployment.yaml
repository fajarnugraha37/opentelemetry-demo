apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.temp.yaml
    kompose.version: 1.35.0 (9532ceef3)
  labels:
    io.kompose.service: inventory
  name: inventory
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: inventory
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose.temp.yaml
        kompose.version: 1.35.0 (9532ceef3)
      labels:
        io.kompose.service: inventory
    spec:
      containers:
        - env:
            - name: GRPC_OTEL_COLLECTOR_HOST
              value: otel-collector:4317
            - name: HTTP_LOKI_ENDPOINT
              value: http://loki:3100
            - name: HTTP_OTEL_COLLECTOR_HOST
              value: otel-collector:4318
            - name: INVENTORY_SERVICE
              value: http://inventory
            - name: KAFKA_BROKERS
              value: kafka:9092
            - name: KAFKA_CLIENT_ID
              value: inventory-service-client
            - name: KAFKA_CONNECTION_TIMEOUT
              value: "60000"
            - name: KAFKA_GROUP_ID
              value: inventory-service-group
            - name: KAFKA_LOG_LEVEL
              value: "4"
            - name: KAFKA_REQUEST_TIMEOUT
              value: "60000"
            - name: KAFKA_TOPICS
              value: order-created:5
            - name: LOKI_LOG_INTERVAL
              value: "15"
            - name: LOKI_LOG_LEVEL
              value: debug
            - name: NODE_ENV
              value: production
            - name: ORDER_SERVICE
              value: http://order
            - name: PAYMENT_SERVICE
              value: http://payment
            - name: PORT
              value: "80"
            - name: SERVICE_NAME
              value: inventory-service
          image: inventory
          name: inventory
          ports:
            - containerPort: 80
              protocol: TCP
      restartPolicy: Always
